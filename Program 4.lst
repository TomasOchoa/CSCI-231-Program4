Microsoft (R) Macro Assembler Version 14.00.23026.0	    11/03/15 09:08:36
1Coin Change Calculator (CoinChangeCalculator.asm	     Page 1 - 1


				TITLE Coin Change Calculator (CoinChangeCalculator.asm)

				;// Name:	Tomas Ochoa 	   		
				;//
				;// Program 4: Change Calculator 
				;//
				;// 	This program calculates and tells what coins to give out for any amount 
				;// of change from 1 cent to 99 cents. 
				INCLUDE	Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				;//------------------------- DATA SEGMENT ------------------------- 
 00000000			.data
				;// For Colors
 = 000000D4			CustomColor	= red + (lightMagenta * 16)
 = 00000007			DefaultColor	= lightGray + (black * 16) 
				;// Prompts and Related
 00000000 50 6C 65 61 73	Prompt1		BYTE "Please enter an amount of change: ", 0
	   65 20 65 6E 74
	   65 72 20 61 6E
	   20 61 6D 6F 75
	   6E 74 20 6F 66
	   20 63 68 61 6E
	   67 65 3A 20 00
 00000023 57 6F 75 6C 64	Prompt2		BYTE "Would you like to try a different amount? (y/n): ", 0
	   20 79 6F 75 20
	   6C 69 6B 65 20
	   74 6F 20 74 72
	   79 20 61 20 64
	   69 66 66 65 72
	   65 6E 74 20 61
	   6D 6F 75 6E 74
	   3F 20 28 79 2F
	   6E 29 3A 20 00
 00000055 43 6F 6C 6F 72	Prompt3		BYTE "Colors have been reset to default...", 0
	   73 20 68 61 76
	   65 20 62 65 65
	   6E 20 72 65 73
	   65 74 20 74 6F
	   20 64 65 66 61
	   75 6C 74 2E 2E
	   2E 00
 0000007A 47 6F 6F 64 62	Prompt4		BYTE "Goodbye!", 0
	   79 65 21 00
 00000083 45 72 72 6F 72	Prompt5		BYTE	"Error! Could not recover!", 0
	   21 20 43 6F 75
	   6C 64 20 6E 6F
	   74 20 72 65 63
	   6F 76 65 72 21
	   00
 0000009D 45 78 69 74 69	Prompt6		BYTE	"Exiting now...", 0
	   6E 67 20 6E 6F
	   77 2E 2E 2E 00
 000000AC 49 6E 76 61 6C	Prompt7		BYTE "Invalid Input! Try Again! (y/n): ", 0
	   69 64 20 49 6E
	   70 75 74 21 20
	   54 72 79 20 41
	   67 61 69 6E 21
	   20 28 79 2F 6E
	   29 3A 20 00
 000000CE 49 6E 76 61 6C	Prompt8		BYTE "Invalid amount! Please enter an amount of change between 99 and 1: ", 0
	   69 64 20 61 6D
	   6F 75 6E 74 21
	   20 50 6C 65 61
	   73 65 20 65 6E
	   74 65 72 20 61
	   6E 20 61 6D 6F
	   75 6E 74 20 6F
	   66 20 63 68 61
	   6E 67 65 20 62
	   65 74 77 65 65
	   6E 20 39 39 20
	   61 6E 64 20 31
	   3A 20 00
 00000112 20 63 65 6E 74	Display1		BYTE " cents can be returned as ", 0
	   73 20 63 61 6E
	   20 62 65 20 72
	   65 74 75 72 6E
	   65 64 20 61 73
	   20 00
 0000012D 20 71 75 61 72	NumCoins1		BYTE " quarter(s), ", 0
	   74 65 72 28 73
	   29 2C 20 00
 0000013B 20 64 69 6D 65	NumCoins2		BYTE " dime(s), and ", 0
	   28 73 29 2C 20
	   61 6E 64 20 00
 0000014A 20 70 65 6E 6E	NumCoins3		BYTE " penny(pennies).", 0
	   79 28 70 65 6E
	   6E 69 65 73 29
	   2E 00
				;// Variables that hold the amount of coins needed of each 
				;// denomination for correct change
 0000015B 00000000		NumOfQuarters  DWORD ?
 0000015F 00000000		NumOfDimes	DWORD ?
 00000163 00000000		NumOfPennies	DWORD ?
				;// To calculate change
 00000167 00000000		StartAmount	DWORD 0 
 0000016B 00000000		amount_left	DWORD ?
 0000016F 00000000		coin_value	DWORD ?
 00000173 00000000		number		DWORD ?
				;// Static/Unchanging Values
 = 00000019			Quarter		EQU 25
 = 0000000A			Dime			EQU 10
 = 00000001			Penny		EQU 1
 = 00000003			Denominations	EQU 3
				;// Decision to start over or not
 00000177 00			Decision	BYTE ?
				;//------------------------- CODE SEGMENT -------------------------
 00000000			.code
 00000000			main		PROC						;// Begin main process
 00000000			Start:
 00000000  E8 0000005D			call		ChangeColors			;// Change FG & BG
 00000005  E8 0000009A			call		Input					;// Input Procedure
 0000000A  E8 00000128			call		compute_coin			;// Computre coins for denominations 
 0000000F  E8 000000C6			call		Display					;// Display Results 	
					;// For Looping to start over or not
 00000014  BA 00000023 R		mov		edx, OFFSET Prompt2			;// "Would you like to try a different amount? (y/n): "
 00000019  E8 00000000 E		call		WriteString					
 0000001E			Loop_Yes:
 0000001E  E8 00000000 E		call		ReadChar				;// >> input 
 00000023  A2 00000177 R		mov		Decision, al
					.IF(al == 'y') || (al == 'Y' )		;// Validate input
 00000030  EB CE				jmp Start 
					.ELSEIF(al == 'n') || (al == 'N' )
 0000003C  EB 13				jmp		Loop_No 
					.ELSE								;// If anything else besides 'y','Y','n' or 'N'
 00000040  E8 00000000 E			call		Crlf
 00000045  BA 000000AC R			mov		edx, OFFSET Prompt7		;// "Invalid Input! Try Again! (y/n): "
 0000004A  E8 00000000 E			call		WriteString 
 0000004F  EB CD				jmp		Loop_Yes 
					.ENDIF	
 00000051			Loop_No:
 00000051  E8 0000001E			call		DefaultColors			;// Change back to default colors
 00000056  E8 00000000 E		call		Crlf 
					exit 
 00000062			main		ENDP						;// End main process
				;//------------------------- SUB ROUTINES -------------------------
				;//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
				;//NAME: ChangeColors
				;//
				;//DESCRIPTION:
				;//			This sub routine changes the default colors of both
				;//		Foreground and Background to Red and light pink
				;//
				;//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 00000062			ChangeColors	PROC
 00000062  60			PUSHAD 
 00000063  B8 000000D4			mov	eax, CustomColor
 00000068  E8 00000000 E		call	SetTextColor
 0000006D  E8 00000000 E		call Clrscr 
 00000072  61			POPAD
 00000073  C3			ret 
 00000074			ChangeColors	ENDP 

				;//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
				;//NAME: DefaultColors
				;//
				;//DESCRIPTION:
				;//			This sub routine changes the current colors of 
				;//		forground and background bac to default (LightGray + Black)
				;//
				;//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 00000074			DefaultColors	PROC
 00000074  60			PUSHAD 
 00000075  B8 00000007			mov	eax, DefaultColor		;// Load default colors
 0000007A  E8 00000000 E		call	SetTextColor		;// Change the colors
 0000007F  E8 00000000 E		call Clrscr					;// clear the screen show new colors
 00000084  BA 00000055 R		mov edx, OFFSET Prompt3		;// Cout << Prompt3 << endl
 00000089  E8 00000000 E		call WriteString			
 0000008E  E8 00000000 E		call Crlf 
 00000093  BA 0000007A R		mov	edx, OFFSET Prompt4		;// cout << Prompt4 << endl 
 00000098  E8 00000000 E		call WriteString
 0000009D  E8 00000000 E		call Crlf 
 000000A2  61			POPAD
 000000A3  C3			ret 
 000000A4			DefaultColors	ENDP 

				;//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
				;//NAME: Input
				;//
				;//DESCRIPTION:
				;//			This sub routine when called prompts the user for input
				;//		and stores the user's input to the apropriate variables
				;//
				;//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 000000A4			Input	PROC 
 000000A4  60			PUSHAD 
					;// Prompt User
 000000A5  BA 00000000 R		mov		edx, OFFSET Prompt1 
 000000AA  E8 00000000 E		call		WriteString 
					;// Input check for input only btween 1-99
 000000AF			InputVal:
					;// Read input
 000000AF  E8 00000000 E		call		ReadDec 
 000000B4  A3 00000167 R		mov		StartAmount, eax
					;// If else to check 
					.IF(eax < 1) || (eax > 99)			;// If eax > 99 or < 1 reinput
 000000C3  BA 000000CE R			mov		edx, OFFSET Prompt8 
 000000C8  E8 00000000 E			call		WriteString 
 000000CD  EB E0				jmp		InputVal  
					.ELSE								
 000000D1  EB 00				jmp		InputBreak 		
					.ENDIF	
 000000D3			InputBreak: 
 000000D3  E8 00000000 E		call		Crlf 
 000000D8  61			POPAD	
 000000D9  C3			ret 
 000000DA			Input	ENDP

				;//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
				;//NAME: Display
				;//
				;//DESCRIPTION:
				;//			This sub routine displays the result change to give
				;//		out onto screen
				;//
				;//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 000000DA			Display	PROC 
 000000DA  60			PUSHAD 
					;// "[StartAmount] can be returned as [NumOfQuarters] quarter(s)...
					;//		, [NumOFDimes] dime(s), and [NumOfPennies]penny(pennies)"
 000000DB  A1 00000167 R		mov		eax, StartAmount
 000000E0  E8 00000000 E		call		WriteDec
 000000E5  BA 00000112 R		mov		edx, OFFSET Display1 
 000000EA  E8 00000000 E		call		WriteString 
 000000EF  A1 0000015B R		mov		eax, NumOfQuarters
 000000F4  E8 00000000 E		call		WriteDec 
 000000F9  BA 0000012D R		mov		edx, OFFSET NumCoins1 
 000000FE  E8 00000000 E		call		WriteString 
 00000103  A1 0000015F R		mov		eax, NumOfDimes
 00000108  E8 00000000 E		call		WriteDec
 0000010D  BA 0000013B R		mov		edx, OFFSET NumCoins2
 00000112  E8 00000000 E		call		WriteString
 00000117  A1 00000163 R		mov		eax, NumOfPennies
 0000011C  E8 00000000 E		call		WriteDec
 00000121  BA 0000014A R		mov		edx, OFFSET NumCoins3 
 00000126  E8 00000000 E		call		WriteString 
 0000012B  E8 00000000 E		call		Crlf 		
 00000130  E8 00000000 E		call		Crlf 
 00000135  61			POPAD	
 00000136  C3			ret  
 00000137			Display	ENDP

				;//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
				;//NAME: compute_coin
				;//
				;//DESCRIPTION:
				;//			This sub routine computes the number of coins needed
				;//		for the amount of change given as user input
				;//
				;//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 00000137			compute_coin	PROC 
 00000137  60			PUSHAD
 00000138			cc_Start:
 00000138  B9 00000003			mov		ecx, Denominations	;// Count = # of Denominations = 3
 0000013D  A1 00000167 R		mov		eax, StartAmount	;// eax => StartAmount
 00000142  A3 0000016B R		mov		amount_left, eax	;// amount_left = eax => StartAmount
 00000147  EB 00			jmp		Count_Check			;// jump to count_check
 00000149			Count_Check:	
					;// Check what coin_value to set
					.IF(ecx == 3)
						;// Set coin_value to a quarter
 0000014E  BB 00000019				mov		ebx, Quarter 
 00000153  89 1D 0000016F R			mov		coin_value, ebx
 00000159  8B 1D 0000016F R			mov		ebx, coin_value 
 0000015F  E2 30				LOOP Division_Stuff 
					.ENDIF
					.IF(ecx == 2)
 00000166  BB 0000000A				mov		ebx, Dime 
 0000016B  89 1D 0000016F R			mov		coin_value, ebx
 00000171  8B 1D 0000016F R			mov		ebx, coin_value
 00000177  E2 18				LOOP Division_Stuff
					.ENDIF
					.IF(ecx == 1)
 0000017E  BB 00000001				mov		ebx, Penny 
 00000183  89 1D 0000016F R			mov		coin_value, ebx
 00000189  8B 1D 0000016F R			mov		ebx, coin_value
 0000018F  E2 00				LOOP Division_Stuff
					.ENDIF
 00000191			Division_Stuff:
					;// Divide by denomination
 00000191  BA 00000000			mov		edx, 0			;// edx = 0
 00000196  A1 0000016B R		mov		eax, amount_left;// eax => amount_left 
 0000019B  F7 F3			div		ebx				;// Divide eax/ebx 
 0000019D  A3 00000173 R		mov		number, eax		;// 
 000001A2  89 15 0000016B R		mov		amount_left, edx
 000001A8  EB 00			jmp		Coin_Number 
 000001AA			Coin_Number:
					;// Set amount of coins for each denomination
					;// Quarters
					.IF(ecx == 2)
 000001AF  A3 0000015B R			mov	NumOfQuarters, eax
 000001B4  EB 93				jmp	Count_Check 
					.ENDIF	
					;// Dimes 
					.IF(ecx == 1)
 000001BB  A3 0000015F R			mov	NumOfDimes, eax 	
 000001C0  EB 87				jmp	Count_Check
					.ENDIF
					;// Pennies 
					.IF(ecx == 0)
 000001C6  A3 00000163 R			mov	NumOfPennies, eax 
 000001CB  EB 00				jmp	cc_End 
					.ENDIF
 000001CD			cc_End:
 000001CD  61			POPAD	
 000001CE  C3			ret  
 000001CF			compute_coin	ENDP
				end		main											;// End main
Microsoft (R) Macro Assembler Version 14.00.23026.0	    11/03/15 09:08:36
1Coin Change Calculator (CoinChangeCalculator.asm	     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000178 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001CF Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ChangeColors . . . . . . . . . .	P Near	 00000062 _TEXT	Length= 00000012 Public STDCALL
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DefaultColors  . . . . . . . . .	P Near	 00000074 _TEXT	Length= 00000030 Public STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Display  . . . . . . . . . . . .	P Near	 000000DA _TEXT	Length= 0000005D Public STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Input  . . . . . . . . . . . . .	P Near	 000000A4 _TEXT	Length= 00000036 Public STDCALL
  InputVal . . . . . . . . . . .	L Near	 000000AF _TEXT	
  InputBreak . . . . . . . . . .	L Near	 000000D3 _TEXT	
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
compute_coin . . . . . . . . . .	P Near	 00000137 _TEXT	Length= 00000098 Public STDCALL
  cc_Start . . . . . . . . . . .	L Near	 00000138 _TEXT	
  Count_Check  . . . . . . . . .	L Near	 00000149 _TEXT	
  Division_Stuff . . . . . . . .	L Near	 00000191 _TEXT	
  Coin_Number  . . . . . . . . .	L Near	 000001AA _TEXT	
  cc_End . . . . . . . . . . . .	L Near	 000001CD _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000062 Public STDCALL
  Start  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  Loop_Yes . . . . . . . . . . .	L Near	 0000001E _TEXT	
  Loop_No  . . . . . . . . . . .	L Near	 00000051 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
CustomColor  . . . . . . . . . .	Number	 000000D4h   
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
Decision . . . . . . . . . . . .	Byte	 00000177 _DATA	
DefaultColor . . . . . . . . . .	Number	 00000007h   
Denominations  . . . . . . . . .	Number	 00000003h   
Dime . . . . . . . . . . . . . .	Number	 0000000Ah   
Display1 . . . . . . . . . . . .	Byte	 00000112 _DATA	
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
NumCoins1  . . . . . . . . . . .	Byte	 0000012D _DATA	
NumCoins2  . . . . . . . . . . .	Byte	 0000013B _DATA	
NumCoins3  . . . . . . . . . . .	Byte	 0000014A _DATA	
NumOfDimes . . . . . . . . . . .	DWord	 0000015F _DATA	
NumOfPennies . . . . . . . . . .	DWord	 00000163 _DATA	
NumOfQuarters  . . . . . . . . .	DWord	 0000015B _DATA	
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
Penny  . . . . . . . . . . . . .	Number	 00000001h   
Prompt1  . . . . . . . . . . . .	Byte	 00000000 _DATA	
Prompt2  . . . . . . . . . . . .	Byte	 00000023 _DATA	
Prompt3  . . . . . . . . . . . .	Byte	 00000055 _DATA	
Prompt4  . . . . . . . . . . . .	Byte	 0000007A _DATA	
Prompt5  . . . . . . . . . . . .	Byte	 00000083 _DATA	
Prompt6  . . . . . . . . . . . .	Byte	 0000009D _DATA	
Prompt7  . . . . . . . . . . . .	Byte	 000000AC _DATA	
Prompt8  . . . . . . . . . . . .	Byte	 000000CE _DATA	
Quarter  . . . . . . . . . . . .	Number	 00000019h   
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
StartAmount  . . . . . . . . . .	DWord	 00000167 _DATA	
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
amount_left  . . . . . . . . . .	DWord	 0000016B _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
coin_value . . . . . . . . . . .	DWord	 0000016F _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
number . . . . . . . . . . . . .	DWord	 00000173 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
